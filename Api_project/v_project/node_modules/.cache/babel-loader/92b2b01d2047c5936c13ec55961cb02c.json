{"remainingRequest":"D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\node_modules\\babel-loader\\lib\\index.js!D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\src\\components\\Project_case.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\src\\components\\Project_case.vue","mtime":1661077857000},{"path":"D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\babel.config.js","mtime":1653811334000},{"path":"D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0诺诺\\Projects\\Api_project\\Api_project\\v_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport Report from \"../components/Report\";\nexport default {\n  name: \"Project_case\",\n  data: function data() {\n    return {\n      right_report: false,\n      env_list: [],\n      fd_index: '',\n      chose_tab_pane: '',\n      right_api: false,\n      right_configure: false,\n      useable_par: '',\n      apis: [],\n      seting_api: {},\n      seting_configure: {},\n      dck: [],\n      // 默认选中\n      dek: [],\n      // 默认展开\n      ref: \"tree\",\n      tableData: [{\n        name: \"name\",\n        des: \"des\"\n      }],\n      activeName: \"\",\n      response_data: {\n        R: '',\n        RD: '',\n        CR: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    document.getElementById('right_div').style.minHeight = (document.documentElement.clientHeight - 230).toString() + 'px';\n    document.getElementById('right_div').style.maxHeight = (document.documentElement.clientHeight - 230).toString() + 'px';\n    document.getElementById('left_div').style.maxHeight = (document.documentElement.clientHeight - 285).toString() + 'px';\n    axios.get('http://localhost:8000/get_apis/', {\n      params: {\n        project_id: this.project_id\n      }\n    }).then(function (res) {\n      _this.apis = res.data;\n    });\n    axios.get('http://localhost:8000/get_dck/', {\n      params: {\n        project_id: this.project_id\n      }\n    }).then(function (res) {\n      _this.dck = res.data;\n    });\n    axios.get('http://localhost:8000/get_env_list/').then(function (res) {\n      _this.env_list = res.data;\n      _this.restaurants = _this.loadAll();\n    });\n  },\n  methods: {\n    look_report: function look_report() {\n      this.right_configure = false;\n      this.right_api = false;\n      this.right_report = true;\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var restaurants = this.restaurants;\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants; // 调用 callback 返回建议列表的数据\n\n      cb(results);\n    },\n    createFilter: function createFilter(queryString) {\n      return function (restaurant) {\n        return restaurant.host.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    loadAll: function loadAll() {\n      return this.env_list;\n    },\n    handleSelect: function handleSelect(item) {\n      this.seting_api.host = item.host;\n    },\n    get_action: function get_action() {\n      return process.env.VUE_APP_BASE_URL + '/upload_binary_file/?ApiID=' + this.seting_api.id;\n    },\n    get_json: function get_json() {\n      try {\n        return JSON.parse(this.response_data.R);\n      } catch (e) {\n        return this.response_data.R;\n      }\n    },\n    set_fd_index: function set_fd_index(index) {\n      this.fd_index = index;\n    },\n    up_fd_file: function up_fd_file(res, file) {\n      var file_name = '*FILE*' + this.seting_api.id + '_' + file.raw.name;\n      this.seting_api.payload_fd[this.fd_index].value = file_name;\n      document.getElementById('fd_value_input_' + this.fd_index).value = file_name;\n      document.getElementById('fd_value_input_' + this.fd_index).disabled = true;\n    },\n    upload_binary_file: function upload_binary_file(res, file) {\n      this.seting_api.payload_binary = this.seting_api.id + '_' + file.raw.name;\n    },\n    up_api: function up_api() {\n      var _this2 = this;\n\n      axios.get('http://localhost:8000/up_api/', {\n        params: {\n          api_id: this.seting_api.id,\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this2.apis = res.data;\n        _this2.right_api = false;\n        _this2.dek = [_this2.seting_api.id];\n      });\n    },\n    down_api: function down_api() {\n      var _this3 = this;\n\n      axios.get('http://localhost:8000/down_api/', {\n        params: {\n          api_id: this.seting_api.id,\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this3.apis = res.data;\n        _this3.right_api = false;\n        _this3.dek = [_this3.seting_api.id];\n      });\n    },\n    up_configure: function up_configure() {\n      var _this4 = this;\n\n      axios.get('http://localhost:8000/up_configure/', {\n        params: {\n          configure_id: this.seting_configure.id,\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this4.apis = res.data;\n        _this4.right_configure = false;\n        _this4.dek = [parseInt(_this4.seting_configure.id.split('_')[0])];\n      });\n    },\n    down_configure: function down_configure() {\n      var _this5 = this;\n\n      axios.get('http://localhost:8000/down_configure/', {\n        params: {\n          configure_id: this.seting_configure.id,\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this5.apis = res.data;\n        _this5.right_configure = false;\n        _this5.dek = [parseInt(_this5.seting_configure.id.split('_')[0])];\n      });\n    },\n    get_label: function get_label(label) {\n      return label.substring(0, 12) + (label.length > 12 ? '...' : '');\n    },\n    handleCheckChange: function handleCheckChange(data, checked) {\n      var _this6 = this;\n\n      axios.get('http://localhost:8000/set_dck/', {\n        params: {\n          project_id: this.project_id,\n          dck: this.$refs.tree.getCheckedKeys().toString()\n        }\n      }).then(function (res) {\n        _this6.dck = res.data;\n      });\n    },\n    set: function set(data) {\n      var _this7 = this;\n\n      console.log(data);\n\n      if (data.type == 'api') {\n        this.right_api = true;\n        this.right_configure = false;\n        this.right_report = false;\n        this.seting_api = data;\n        this.response_data = {\n          R: '',\n          RD: '',\n          CR: ''\n        }; //    获取可用变量\n\n        axios.get('/get_useable_par/', {\n          params: {\n            api_id: data.id,\n            project_id: this.project_id\n          }\n        }).then(function (res) {\n          _this7.useable_par = res.data;\n        });\n      } else {\n        this.right_api = false;\n        this.right_configure = true;\n        this.right_report = false;\n        this.seting_configure = data;\n      }\n    },\n    remove: function remove(data) {\n      var _this8 = this;\n\n      if (confirm(\"确定删除么?\") == false) {\n        return;\n      }\n\n      axios.get('http://localhost:8000/remove_ac/', {\n        params: {\n          project_id: this.project_id,\n          id: data.id\n        }\n      }).then(function (res) {\n        _this8.apis = res.data;\n        _this8.right_api = false;\n        _this8.right_configure = false;\n\n        _this8.dck.remove(data.id);\n      });\n    },\n    vif: function vif(data) {\n      if (data.type == 'api') {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    handleClick: function handleClick(tab, event) {\n      console.log(tab, event);\n    },\n    add_configure: function add_configure(data) {\n      var _this9 = this;\n\n      axios.get('http://localhost:8000/add_configure/', {\n        params: {\n          id: data.id,\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this9.apis = res.data;\n        _this9.dek = [data.id];\n      });\n    },\n    add_apis: function add_apis() {\n      var _this10 = this;\n\n      axios.get('http://localhost:8000/add_apis/', {\n        params: {\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this10.apis = res.data;\n      });\n    },\n    save_configure: function save_configure() {\n      var _this11 = this;\n\n      axios.post('http://localhost:8000/save_configure/', this.seting_configure).then(function (res) {\n        _this11.$message({\n          message: \"保存成功\",\n          type: 'success'\n        });\n      });\n    },\n    save_api: function save_api() {\n      var _this12 = this;\n\n      axios.post('http://localhost:8000/save_api/', this.seting_api, {\n        params: {\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this12.apis = res.data;\n\n        _this12.$message({\n          message: \"保存成功\",\n          type: \"success\"\n        });\n      });\n    },\n    send_api: function send_api() {\n      var _this13 = this;\n\n      axios.post('http://localhost:8000/send_api/', this.seting_api, {\n        params: {\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this13.response_data = res.data;\n        _this13.chose_tab_pane = 'Response';\n      });\n    },\n    run: function run() {\n      this.right_configure = false;\n      this.right_api = false;\n      this.right_report = false;\n\n      if (confirm('执行大用例之前请先确保当前接口或配置的设置已保存！') == false) {\n        return;\n      }\n\n      var end_result = document.getElementById('end_result');\n      var doing_api = document.getElementById('doing_api');\n      var project_id = this.project_id;\n      var t = setInterval(function () {\n        axios.get('/doing_api/', {\n          params: {\n            project_id: project_id\n          }\n        }).then(function (res) {\n          doing_api.innerText = res.data;\n        });\n      }, 500);\n      axios.get('/run/', {\n        params: {\n          project_id: this.project_id // dck:this.dck.toString(),\n\n        }\n      }).then(function (res) {\n        clearInterval(t);\n        end_result.innerText = res.data;\n\n        if (res.data == 'True') {\n          end_result.style.color = 'green';\n        } else {\n          end_result.style.color = 'red';\n        }\n\n        doing_api.innerText = '全部执行完毕';\n      });\n    },\n    report: function report() {},\n    chose_configure_method: function chose_configure_method(tab) {\n      this.seting_configure.select = '';\n      this.seting_configure.value = '';\n      this.seting_configure.method = tab.label;\n    },\n    add_params: function add_params() {\n      this.seting_api.params.push({\n        \"key\": \"\",\n        \"value\": \"\"\n      });\n    },\n    del_params: function del_params(index) {\n      this.seting_api.params.splice(index, 1);\n    },\n    add_headers: function add_headers() {\n      this.seting_api.headers.push({\n        \"key\": \"\",\n        \"value\": \"\"\n      });\n    },\n    del_headers: function del_headers(index) {\n      this.seting_api.headers.splice(index, 1);\n    },\n    add_payload_fd: function add_payload_fd() {\n      this.seting_api.payload_fd.push({});\n    },\n    del_payload_fd: function del_payload_fd(index) {\n      this.seting_api.payload_fd.splice(index, 1);\n    },\n    add_payload_xwfu: function add_payload_xwfu() {\n      this.seting_api.payload_xwfu.push({});\n    },\n    del_payload_xwfu: function del_payload_xwfu(index) {\n      this.seting_api.payload_xwfu.splice(index, 1);\n    }\n  },\n  props: [\"project_id\"],\n  components: {\n    Report: Report\n  }\n};",{"version":3,"mappings":"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","names":["name","data","right_report","env_list","fd_index","chose_tab_pane","right_api","right_configure","useable_par","apis","seting_api","seting_configure","dck","dek","ref","tableData","des","activeName","response_data","R","RD","CR","mounted","document","axios","params","project_id","then","methods","look_report","querySearch","queryString","cb","createFilter","loadAll","handleSelect","item","get_action","get_json","set_fd_index","index","up_fd_file","res","file","upload_binary_file","up_api","api_id","down_api","up_configure","configure_id","down_configure","get_label","label","handleCheckChange","checked","set","console","remove","id","vif","handleClick","tab","event","add_configure","add_apis","save_configure","message","type","save_api","send_api","run","doing_api","clearInterval","end_result","report","chose_configure_method","add_params","del_params","add_headers","del_headers","add_payload_fd","del_payload_fd","add_payload_xwfu","del_payload_xwfu","props","components","Report"],"sourceRoot":"src/components","sources":["Project_case.vue"],"sourcesContent":["<template>\n    <div>\n        <el-card id=\"right_div\" style=\"float: right;width: -webkit-calc(100% - 322px)\">\n            <div v-if=\"right_api\">\n                <el-button @click=\"save_api\" size=\"mini\" type=\"primary\">Save</el-button>\n                <el-button @click=\"send_api\" size=\"mini\" type=\"success\">Send</el-button>\n                <el-button @click=\"up_api\" size=\"mini\" type=\"text\">up</el-button>\n                <el-button @click=\"down_api\" size=\"mini\" type=\"text\">down</el-button>\n                &#12288;<span style=\"font-size: xx-small;color:grey\">使用变量请用占位符 {%变量名%} ,可用在请求头、params、请求体的值中</span>\n                &#12288;<span style=\"float: right\">接口ID: {{seting_api.id}}</span>\n                <br><br>\n                <el-form ref=\"form\" label-width=\"80px\" label-position=\"left\">\n                    <el-form-item label=\"名称/描述\">\n                        <el-input v-model=\"seting_api.label\" style=\"width: 50%;\" placeholder=\"名字\"></el-input>\n                        <el-input v-model=\"seting_api.des\" style=\"width: 50%;\" placeholder=\"描述\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"HOST\">\n<!--                        <el-input v-model=\"seting_api.host\"></el-input>-->\n\n                           <el-autocomplete\n                              class=\"inline-input\"\n                              v-model=\"seting_api.host\"\n                              :fetch-suggestions=\"querySearch\"\n                              placeholder=\"输入域名\"\n                              @select=\"handleSelect\"\n                              :trigger-on-focus=\"true\"\n                              style=\"float: left;width: 100%\"\n                            >\n                                <template slot-scope=\"{ item }\">\n                                    <div style=\"color: #0a2d8f\"><strong>{{item.host}}</strong></div>\n                                    <span style=\"color: gray;font-size: xx-small\">【标签: {{item.type}}】</span>\n                                    <span style=\"color: gray;font-size: xx-small\">【描述: {{item.des}}】</span>\n                                    <el-divider></el-divider>\n                                </template>\n                           </el-autocomplete>\n\n\n                    </el-form-item>\n                    <el-form-item label=\"方式/路径\">\n                        <el-select v-model=\"seting_api.method\" style=\"width: 100px\" placeholder=\"请求方式\">\n                            <el-option label=\"POST\" value=\"POST\"></el-option>\n                            <el-option label=\"GET\" value=\"GET\"></el-option>\n                        </el-select>\n                        &nbsp;\n                        <el-input v-model=\"seting_api.path\" style=\"width:-webkit-calc(100% - 112px)\"></el-input>\n                    </el-form-item>\n                    <el-tabs type=\"border-card\" v-model=\"chose_tab_pane\">\n                        <el-tab-pane label=\"Params\">\n                           <el-table\n                            :data=\"seting_api.params\"\n                            border\n                            style=\"width: 100%\"\n                             size=\"mini\">\n\n                               <el-table-column label=\"参数名\" width=\"180\">\n                                   <template slot-scope=\"scope\">\n                                       <el-input v-model=\"scope.row.key\"></el-input>\n                                   </template>\n                               </el-table-column>\n\n                               <el-table-column label=\"参数值\" width=\"180\">\n                                   <template slot-scope=\"scope\">\n                                       <el-input v-model=\"scope.row.value\"></el-input>\n                                   </template>\n                               </el-table-column>\n\n                               <el-table-column label=\"参数描述\" width=\"180\">\n                                   <template slot-scope=\"scope\">\n                                       <el-input v-model=\"scope.row.des\"></el-input>\n                                   </template>\n                               </el-table-column>\n\n                               <el-table-column>\n                                   <template slot=\"header\">\n                                       <el-button @click=\"add_params\">新增参数</el-button>\n                                   </template>\n                                   <template slot-scope=\"scope\">\n                                       <el-button size=\"mini\" type=\"danger\" @click=\"del_params(scope.$index)\">删除</el-button>\n                                   </template>\n                               </el-table-column>\n\n\n                          </el-table>\n\n                        </el-tab-pane>\n                        <el-tab-pane label=\"Headers\">\n                            <el-table\n                            :data=\"seting_api.headers\"\n                            border\n                            style=\"width: 100%\"\n                             size=\"mini\">\n                               <el-table-column label=\"参数名\" width=\"180\">\n                                   <template slot-scope=\"scope\">\n                                       <el-input v-model=\"scope.row.key\"></el-input>\n                                   </template>\n                               </el-table-column>\n\n                               <el-table-column label=\"参数值\" width=\"180\">\n                                   <template slot-scope=\"scope\">\n                                       <el-input v-model=\"scope.row.value\"></el-input>\n                                   </template>\n                               </el-table-column>\n\n                               <el-table-column label=\"参数描述\" width=\"180\">\n                                   <template slot-scope=\"scope\">\n                                       <el-input v-model=\"scope.row.des\"></el-input>\n                                   </template>\n                               </el-table-column>\n\n                               <el-table-column>\n                                   <template slot=\"header\">\n                                       <el-button @click=\"add_headers\">新增参数</el-button>\n                                   </template>\n                                   <template slot-scope=\"scope\">\n                                       <el-button size=\"mini\" type=\"danger\" @click=\"del_headers(scope.$index)\">删除</el-button>\n                                   </template>\n                               </el-table-column>\n                          </el-table>\n\n\n                        </el-tab-pane>\n                        <el-tab-pane label=\"Body\">\n                              <el-tabs v-model=\"seting_api.payload_method\" @tab-click=\"handleClick\">\n                                <el-tab-pane label=\"none\" name=\"none\"><h2 style=\"text-align: center;color: darkgray;\">不传任何参数</h2></el-tab-pane>\n                                <el-tab-pane label=\"form-data\" name=\"form-data\">\n                                    <el-table\n                                        :data=\"seting_api.payload_fd\"\n                                        border\n                                        style=\"width: 100%\"\n                                         size=\"mini\">\n                                           <el-table-column label=\"参数名\" width=\"150\">\n                                               <template slot-scope=\"scope\">\n                                                   <el-input v-model=\"scope.row.key\"></el-input>\n                                               </template>\n                                           </el-table-column>\n                                           <el-table-column label=\"参数值\" width=\"150\">\n                                               <template slot-scope=\"scope\">\n                                                   <el-input :id=\"'fd_value_input_'+scope.$index\" v-model=\"scope.row.value\"></el-input>\n                                               </template>\n                                           </el-table-column>\n                                            <el-table-column label=\"文件\" width=\"150\">\n                                                <template slot-scope=\"scope\">\n                                                    <el-upload\n                                                    class=\"upload-demo\"\n                                                    :action=\" 'http://localhost:8000/upload_fd_file/?ApiID=' + seting_api.id\"\n                                                    :limit=\"1\"\n                                                    name = 'fd_file'\n                                                    :on-success=\"up_fd_file\"\n                                                    >\n                                                        <el-button @click=\"set_fd_index(scope.$index)\" size=\"small\" type=\"primary\">FILE</el-button>\n                                                    </el-upload>\n                                                </template>\n                                            </el-table-column>\n                                           <el-table-column label=\"参数描述\" width=\"150\">\n                                               <template slot-scope=\"scope\">\n                                                   <el-input v-model=\"scope.row.des\"></el-input>\n                                               </template>\n                                           </el-table-column>\n                                           <el-table-column>\n                                               <template slot=\"header\">\n                                                   <el-button @click=\"add_payload_fd\">新增参数</el-button>\n                                               </template>\n                                               <template slot-scope=\"scope\">\n                                                   <el-button size=\"mini\" type=\"danger\" @click=\"del_payload_fd(scope.$index)\">删除</el-button>\n                                               </template>\n                                           </el-table-column>\n                                      </el-table>\n                                </el-tab-pane>\n                                <el-tab-pane label=\"x-www-form-urlencoded\" name=\"x-www-form-urlencoded\">\n\n                                    <el-table\n                                        :data=\"seting_api.payload_xwfu\"\n                                        border\n                                        style=\"width: 100%\"\n                                         size=\"mini\">\n\n\n                                           <el-table-column label=\"参数名\" width=\"180\">\n                                               <template slot-scope=\"scope\">\n                                                   <el-input v-model=\"scope.row.key\"></el-input>\n                                               </template>\n                                           </el-table-column>\n\n                                           <el-table-column label=\"参数值\" width=\"180\">\n                                               <template slot-scope=\"scope\">\n                                                   <el-input v-model=\"scope.row.value\"></el-input>\n                                               </template>\n                                           </el-table-column>\n\n                                           <el-table-column label=\"参数描述\" width=\"180\">\n                                               <template slot-scope=\"scope\">\n                                                   <el-input v-model=\"scope.row.des\"></el-input>\n                                               </template>\n                                           </el-table-column>\n\n                                           <el-table-column>\n                                               <template slot=\"header\">\n                                                   <el-button @click=\"add_payload_xwfu\">新增参数</el-button>\n                                               </template>\n                                               <template slot-scope=\"scope\">\n                                                   <el-button size=\"mini\" type=\"danger\" @click=\"del_payload_xwfu(scope.$index)\">删除</el-button>\n                                               </template>\n                                           </el-table-column>\n\n\n                                      </el-table>\n\n                                </el-tab-pane>\n                                <el-tab-pane label=\"raw\" name=\"raw\">\n                                    <el-select v-model=\"seting_api.payload_raw_method\" style=\"z-index: 999;width: 120px;position: fixed;right: 57px;\" placeholder=\"请选择\">\n                                        <el-option label=\"Text\" value=\"Text\"></el-option>\n                                        <el-option label=\"JavaScript\" value=\"JavaScript\"></el-option>\n                                        <el-option label=\"JSON\" value=\"JSON\"></el-option>\n                                        <el-option label=\"XML\" value=\"XML\"></el-option>\n                                        <el-option label=\"HTML\" value=\"HTML\"></el-option>\n                                    </el-select>\n                                    <el-input v-model=\"seting_api.payload_raw\" type=\"textarea\" :rows=\"6\"></el-input>\n                                </el-tab-pane>\n                                <el-tab-pane label=\"binary\" name=\"binary\">\n                                    <el-upload\n                                      class=\"upload-demo\"\n                                      drag\n                                      :action=\" get_action() \"\n                                      :limit=\"1\"\n                                      name = 'binary_file'\n                                      :on-success=\"upload_binary_file\"\n                                        >\n                                      <i class=\"el-icon-upload\"></i>\n                                      <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n                                    </el-upload>\n                                </el-tab-pane>\n                                <el-tab-pane label=\"GraphQL\" name=\"GraphQL\">\n                                    <el-input v-model=\"seting_api.payload_GQL_q\" type=\"textarea\" :rows=\"6\" style=\"width: 70%\" placeholder=\"QUERY\"></el-input>\n                                    <el-input v-model=\"seting_api.payload_GQL_g\" type=\"textarea\" :rows=\"6\" style=\"width: 30%\" placeholder=\"GRAPHQL VARIABLES\"></el-input>\n                                </el-tab-pane>\n                              </el-tabs>\n                        </el-tab-pane>\n                        <el-tab-pane name=\"Response\" label=\"Response\">\n                            <json-viewer :value=\"get_json()\"></json-viewer>\n                        </el-tab-pane>\n                        <el-tab-pane label=\"ResponseData\"><el-input v-model=\"response_data.RD\" type=\"textarea\" :rows=\"9\"></el-input></el-tab-pane>\n                        <el-tab-pane label=\"ConfigureResult\"><el-input v-model=\"response_data.CR\" type=\"textarea\" :rows=\"9\"></el-input></el-tab-pane>\n                    </el-tabs>\n                </el-form>\n            </div>\n            <div v-else-if=\"right_configure\">\n                    <!--    配置详情页      -->\n                    <el-button @click=\"save_configure\" size=\"mini\" type=\"primary\">Save</el-button>\n                    <el-button @click=\"up_configure\" size=\"mini\" type=\"text\">up</el-button>\n                    <el-button @click=\"down_configure\" size=\"mini\" type=\"text\">down</el-button>\n                     <span style=\"float: right;\">配置ID:{{seting_configure.id}}</span>\n                <br>\n                    执行时机：\n                    <el-select v-model=\"seting_configure.do_time\" placeholder=\"请选择\" style=\"width:90px\">\n                        <el-option label=\"before\" value=\"before\"></el-option>\n                        <el-option label=\"after\" value=\"after\"></el-option>\n                    </el-select>\n                    &#12288;配置名称：\n                    <el-input style=\"width:-webkit-calc(100% - 285px)\" v-model=\"seting_configure.label\"></el-input>\n                <br><br>\n                <el-tabs v-model=\"seting_configure.method\" @tab-click=\"chose_configure_method\" tab-position=\"left\" style=\"height: 100%\">\n                     <el-tab-pane name=\"断言\" label=\"断言\">\n                        <el-select v-model=\"seting_configure.select\" style=\"width: 120px;margin: 10px\">\n                            <el-option label=\"全值检索\" value=\"全值检索\"></el-option>\n                            <el-option label=\"正则匹配\" value=\"正则匹配\"></el-option>\n                            <el-option label=\"路径匹配\" value=\"路径匹配\"></el-option>\n                            <el-option label=\"sql断言\" value=\"sql断言\"></el-option>\n                        </el-select>\n                        <el-input v-model=\"seting_configure.value\" placeholder=\"请输入表达式、sql语句等\" style=\"width: -webkit-calc(100% - 168px)\"></el-input>\n                        <br>\n                        <p>帮助：</p>\n                        <p>1.全值检索：在整个返回值当中，是否存在目标字符串。（.find()） </p>\n                        <p>2.正则匹配：需要用户写左边界右边界和匹配正则表达式。也是只检索字符串。</p>\n                        <p>3.路径匹配：用户写路径和目标的类型和值。 （只能是json返回值才可用）</p>\n                        <p>4.sql断言：用户写sql原生语句和目标值。</p>\n                        <p>例子：{\"errorCode\":200,\"data\":[{\"name\":\"lisi\"},{\"name\":\"zhangsan\"},{\"name\":\"wang\"}]}</p>\n                        <p>全值检索：zhangsan</p>\n                        <p>正则匹配：name\":\"(.*?)\"}==zhangsan</p>\n                        <p>路径匹配：[\"data\"][1][\"name\"]==\"zhangsan\"</p>\n                         <p>sql断言：用户必须在语句后写英文分号;</p>\n                        <p>sql断言：select name from 表 where id=5;  == \"zhangsan\" (只取第一行第一个单元格数据作验证)</p>\n                        <p>sql断言：select name from 表 where name='zhangsan';  (结果是否为空)</p>\n\n\n                    </el-tab-pane>\n                     <el-tab-pane name=\"提取\" label=\"提取\">\n\n                         <el-select v-model=\"seting_configure.select\" style=\"width: 120px;margin: 10px\">\n                            <el-option label=\"路径提取\" value=\"路径提取\"></el-option>\n                            <el-option label=\"正则提取\" value=\"正则提取\"></el-option>\n                            <el-option label=\"sql提取\" value=\"sql提取\"></el-option>\n                        </el-select>\n                        <el-input v-model=\"seting_configure.value\" placeholder=\"请输入表达式、sql查询语句等\" style=\"width: -webkit-calc(100% - 168px)\"></el-input>\n                        <br>\n                        <p>帮助：</p>\n                          <p>1.路径提取：用户写变量名=路径。仅限json</p>\n                          <p>2.正则提取：用户写变量名=左边界(.*?)右边界</p>\n                          <p>3.sql提取：用户写变量名=sql select 查询语句（只取第一行第一个单元格数据进行赋值）</p>\n                     </el-tab-pane>\n                     <el-tab-pane name=\"sql增删改\" label=\"sql增删改\">\n                         <el-input v-model=\"seting_configure.value\" placeholder=\"请输入需要执行的sql语句\" ></el-input>\n                        <br>\n                        <p>帮助：</p>\n                         <p>一般用来执行某个特殊需求，如修改，增加，删除等。用户手写sql语句即可，没有返回结果。</p>\n\n                     </el-tab-pane>\n                     <el-tab-pane name=\"随机变量\"  label=\"随机变量\">\n                        <el-input v-model=\"seting_configure.value\" placeholder=\"按照下面要求，输入表达式\"></el-input>\n                        <br>\n                        <p>帮助：</p>\n                         <p>1.常数：a=5, a=8.55, a=\"呵呵\", a=[1,2,3] </p>\n                          <p>2.随机整数：a=randint(1,10)+2-3-12 #随机生成1-10之内的某个数</p>\n                          <p>3.时间戳：a=time.time()</p>\n                          <p>4.身份证：a=IDcard() </p>\n                          <p>  5.地址：a=random_adress()</p>\n                          <p>  6.手机号：a=random_mobile()</p>\n                          <p>  7.人名：a=random_name()</p>\n                          <p>  8.商品名：a=random_product()</p>\n                          <p>  9.统一社会信用代码：a=random_credit()</p>\n                          <p>  10.邮箱地址：a=random_email()</p>\n\n\n                     </el-tab-pane>\n                     <el-tab-pane name=\"mock\"  label=\"mock\">\n                         <el-select v-model=\"seting_configure.select\" style=\"width: 120px;margin: 10px\">\n                            <el-option label=\"写死返回值\" value=\"写死返回值\"></el-option>\n                            <el-option label=\"第三方接口\" value=\"第三方接口\"></el-option>\n                        </el-select>\n                        <el-input type=\"textarea\" :rows=\"5\" v-model=\"seting_configure.value\" placeholder=\"请输入返回值、接口请求等 \"></el-input>\n                        <br>\n                        <p>帮助：</p>\n                         <p>选择写死返回值，可直接粘贴返回值到上面多行输入框，点击保存即可</p>\n                         <p>第三方接口，请依次每行输入：url,请求方式,header字典,请求体类型,请求体</p>\n                         <p>如：\n                             http://wwww.xxx.com/aaa/bbb?a=1 <br>\n                             post <br>\n                             {\"a\":1,\"b\":\"c\"} <br>\n                             form-data / x-www-form-urlencoded / raw-json / raw-text /raw-html /raw-xml/raw-javascript <br>\n                             {\"username\":\"zhangsan\",\"userID\":444}\n                         </p>\n\n                     </el-tab-pane>\n                     <el-tab-pane name=\"插入参数\"  label=\"插入参数\">\n\n                        <el-select v-model=\"seting_configure.select\" style=\"width: 150px;margin: 10px\">\n                            <el-option label=\"request_header\" value=\"request_header\"></el-option>\n                            <el-option label=\"params\" value=\"params\"></el-option>\n                            <el-option label=\"request_body\" value=\"request_body\"></el-option>\n                        </el-select>\n                        <el-input v-model=\"seting_configure.value\" placeholder=\"请输入表达式等\" style=\"width: -webkit-calc(100% - 198px)\"></el-input>\n                        <br>\n                        <p>帮助：</p>\n                         <p>比如：a=55</p>\n\n                     </el-tab-pane>\n                     <el-tab-pane name=\"加密算法\"  label=\"加密算法\">\n                          <el-select v-model=\"seting_configure.select\" style=\"width: 150px;margin: 10px\" placeholder=\"插入位置\">\n                            <el-option label=\"request_header\" value=\"request_header\"></el-option>\n                            <el-option label=\"params\" value=\"params\"></el-option>\n                        </el-select>\n                        <el-input v-model=\"seting_configure.value\" placeholder=\"请输入表达式等\" style=\"width: -webkit-calc(100% - 198px)\"></el-input>\n                        <br>\n                        <p>帮助：</p>\n                         <p>比如：sign = python能执行的加密算法， 其中可以使用接口的全部位置的参数,函数（hashlib.md5(),hashlib.shar1()）</p>\n                         <p>定制算法：sign = self.make_sign()</p>\n                     </el-tab-pane>\n                     <el-tab-pane name=\"草稿\"  label=\"草稿\">\n                         <el-input type=\"textarea\" :rows=\"10\" placeholder=\"请随意使用该文本框\"></el-input>\n                         <p>帮助：临时存放粘贴字符串用</p>\n                     </el-tab-pane>\n                </el-tabs>\n\n            </div>\n            <div v-else-if=\"right_report\">\n\n                <Report :project_id=\"project_id\" ></Report>\n\n            </div>\n            <div v-else>请点击左侧节点set....</div>\n        </el-card>\n        <h1>接口用例页 &#12288; <el-button @click=\"add_apis\" size=\"mini\" type=\"primary\">新增接口</el-button></h1>\n        <el-tree\n        id=\"left_div\"\n        style=\"width: 300px;overflow-y: auto;\"\n        :data=\"apis\"\n        show-checkbox\n        node-key=\"id\"\n        :default-checked-keys=\"dck\"\n        :default-expanded-keys=\"dek\"\n        @check-change=\"handleCheckChange\"\n        ref=\"tree\"\n        :check-strictly=\"true\"\n        >\n            <span slot-scope=\"{data}\">\n                <span v-text=\"get_label(data.label)\" style=\"margin-right: 10px\"></span>\n                 <el-button\n                    type=\"text\"\n                    size=\"mini\"\n                    @click=\"() => set(data)\"\n                    style=\"color: darkblue\">\n                    SET\n                  </el-button>\n                 <el-button\n                         v-if=\"vif(data)\"\n                    type=\"text\"\n                    size=\"mini\"\n                    @click=\"() => add_configure(data)\"\n                    style=\"color: darkgreen\">\n                    ADD\n                  </el-button>\n                 <el-button\n                    type=\"text\"\n                    size=\"mini\"\n                    @click=\"() => remove(data)\"\n                    style=\"color: darkred\">\n                    DEL\n                  </el-button>\n            </span>\n        </el-tree>\n        <el-card style=\"position: fixed;bottom: 15px;width:-webkit-calc(100% - 242px);max-height: 100px;\">\n            <el-input v-model=\"useable_par\" type=\"textarea\" :rows=\"3\" style=\"float: right;width: -webkit-calc(100% - 300px)\" placeholder=\"当前可用的变量\"></el-input>\n\n            <el-button @click=\"run\" size=\"mini\" type=\"success\">执行</el-button>  <span>【正在执行】：</span> <span id=\"doing_api\" style=\"color: green\">...</span>\n            <br>\n            <el-button @click=\"look_report\" style=\"margin-top: 10px\" size=\"mini\" type=\"primary\">报告</el-button>   <span>【最终结果】：</span> <strong><span id=\"end_result\"></span></strong>\n\n        </el-card>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import Report from '../components/Report'\n\n\n\n    export default {\n        name: \"Project_case\",\n        data(){\n            return{\n\n                right_report:false,\n                env_list:[],\n                fd_index:'',\n                chose_tab_pane:'',\n                right_api:false,\n                right_configure:false,\n                useable_par:'',\n                apis:[],\n                seting_api:{},\n                seting_configure:{},\n                dck:[], // 默认选中\n                dek:[], // 默认展开\n                ref:\"tree\",\n                tableData:[{name:\"name\",des:\"des\"}],\n                activeName:\"\",\n                response_data:{\n                    R:'',\n                    RD:'',\n                    CR:'',\n                }\n            }\n        },\n        mounted() {\n            document.getElementById('right_div').style.minHeight = (document.documentElement.clientHeight-230).toString()+'px';\n            document.getElementById('right_div').style.maxHeight = (document.documentElement.clientHeight-230).toString()+'px';\n            document.getElementById('left_div').style.maxHeight = (document.documentElement.clientHeight-285).toString()+'px';\n            axios.get('http://localhost:8000/get_apis/',{\n                params:{\n                    project_id:this.project_id\n                }\n            }).then(res=>{\n                this.apis = res.data\n            });\n            axios.get('http://localhost:8000/get_dck/',{\n                params:{\n                     project_id:this.project_id\n                }\n            }).then(res=>{\n                this.dck = res.data\n            });\n             axios.get('http://localhost:8000/get_env_list/').then(\n                res=>{\n                    this.env_list = res.data;\n                    this.restaurants = this.loadAll();\n                }\n            )\n\n        },\n        methods:{\n\n            look_report(){\n                this.right_configure = false;\n                this.right_api = false;\n                this.right_report = true;\n            },\n             querySearch(queryString, cb) {\n                var restaurants = this.restaurants;\n                var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\n                // 调用 callback 返回建议列表的数据\n                cb(results);\n              },\n              createFilter(queryString) {\n                return (restaurant) => {\n                  return (restaurant.host.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n                };\n              },\n              loadAll() {\n                return this.env_list\n              },\n             handleSelect(item) {\n                this.seting_api.host = item.host\n              },\n            get_action(){\n                return process.env.VUE_APP_BASE_URL+'/upload_binary_file/?ApiID='+this.seting_api.id\n            },\n            get_json(){\n                try{\n                    return JSON.parse(this.response_data.R)\n                }catch (e) {\n                    return this.response_data.R\n                }\n            },\n            set_fd_index(index){\n                this.fd_index = index;\n            },\n            up_fd_file(res,file){\n                var file_name ='*FILE*'+this.seting_api.id+'_'+file.raw.name;\n                this.seting_api.payload_fd[this.fd_index].value = file_name;\n                document.getElementById('fd_value_input_'+this.fd_index).value = file_name;\n                document.getElementById('fd_value_input_'+this.fd_index).disabled = true;\n            },\n            upload_binary_file(res,file){\n                this.seting_api.payload_binary = this.seting_api.id+'_'+file.raw.name;\n            },\n            up_api(){\n                axios.get('http://localhost:8000/up_api/',{\n                    params:{\n                        api_id:this.seting_api.id,\n                        project_id:this.project_id,\n                    }\n                }).then(res=>{\n                    this.apis=res.data;\n                    this.right_api = false;\n                    this.dek = [ this.seting_api.id ]\n                })\n            },\n            down_api(){\n                 axios.get('http://localhost:8000/down_api/',{\n                    params:{\n                        api_id:this.seting_api.id,\n                        project_id:this.project_id,\n                    }\n                }).then(res=>{\n                    this.apis=res.data;\n                    this.right_api = false;\n                    this.dek = [ this.seting_api.id ]\n                })\n\n            },\n            up_configure(){\n                axios.get('http://localhost:8000/up_configure/',{\n                    params:{\n                        configure_id:this.seting_configure.id,\n                        project_id:this.project_id\n                    }\n                }).then(res=>{\n                    this.apis = res.data;\n                    this.right_configure = false;\n                    this.dek = [  parseInt(this.seting_configure.id.split('_')[0])  ]\n                })\n            },\n            down_configure(){\n                axios.get('http://localhost:8000/down_configure/',{\n                    params:{\n                        configure_id:this.seting_configure.id,\n                        project_id:this.project_id\n                    }\n                }).then(res=>{\n                    this.apis = res.data\n                    this.right_configure = false;\n                    this.dek = [  parseInt(this.seting_configure.id.split('_')[0])  ]\n                })\n            },\n            get_label(label){\n              return label.substring(0,12) + ((label.length>12)?'...':'')\n            },\n            handleCheckChange(data, checked){\n                axios.get('http://localhost:8000/set_dck/',{\n                    params:{\n                        project_id:this.project_id,\n                        dck:this.$refs.tree.getCheckedKeys().toString()\n                    }\n                }).then(res=>{\n                    this.dck = res.data\n                })\n            },\n            set(data){\n                console.log(data)\n                if(data.type == 'api'){\n                    this.right_api = true;\n                    this.right_configure = false;\n                    this.right_report = false;\n                    this.seting_api = data;\n                    this.response_data = {R:'', RD:'', CR:''}\n                    //    获取可用变量\n                    axios.get('/get_useable_par/',{\n                        params:{\n                            api_id :data.id,\n                            project_id:this.project_id\n                        }\n                    }).then(res=>{\n                        this.useable_par = res.data;\n                    })\n                }else{\n                    this.right_api = false;\n                    this.right_configure = true;\n                    this.right_report =false;\n                    this.seting_configure = data\n                }\n\n\n            },\n            remove(data){\n                if(confirm(\"确定删除么?\")==false){return}\n                axios.get('http://localhost:8000/remove_ac/',{\n                    params:{\n                        project_id:this.project_id,\n                        id: data.id,\n                    }\n                }).then(res=>{\n                    this.apis = res.data\n                    this.right_api = false;\n                    this.right_configure = false;\n                    this.dck.remove(data.id)\n                })\n            },\n            vif(data){\n                if(data.type=='api'){\n                    return true\n                }else{\n                    return false\n                }\n            },\n            handleClick(tab,event){\n                console.log(tab,event)\n            },\n            add_configure(data){\n                axios.get('http://localhost:8000/add_configure/',{\n                    params:{\n                        id:data.id,\n                        project_id:this.project_id,\n                    }\n                }).then(res=>{\n                    this.apis = res.data;\n                    this.dek = [data.id];\n                })\n            },\n            add_apis(){\n                axios.get('http://localhost:8000/add_apis/',{\n                    params:{\n                        project_id : this.project_id\n                    }\n                }).then(res=>{\n                    this.apis = res.data\n                })\n            },\n            save_configure(){\n                axios.post('http://localhost:8000/save_configure/',this.seting_configure).then(res=>{\n                    this.$message({\n                        message:\"保存成功\",\n                        type:'success',\n                    })\n                })\n            },\n            save_api(){\n                axios.post('http://localhost:8000/save_api/',this.seting_api,{\n                    params:{\n                        project_id : this.project_id\n                    }\n                }).then(res=>{\n                    this.apis=res.data;\n                    this.$message({\n                        message:\"保存成功\",\n                        type:\"success\"\n                    })\n                })\n            },\n            send_api(){\n                axios.post('http://localhost:8000/send_api/',this.seting_api,{\n                    params:{\n                        project_id : this.project_id\n                    }\n                }).then(res=>{\n                    this.response_data = res.data;\n                    this.chose_tab_pane = 'Response';\n                })\n            },\n            run(){\n\n                this.right_configure = false;\n                this.right_api = false;\n                this.right_report = false;\n\n                if(confirm('执行大用例之前请先确保当前接口或配置的设置已保存！') == false){return}\n                var end_result = document.getElementById('end_result');\n                var doing_api = document.getElementById('doing_api');\n                var project_id = this.project_id;\n                var t = setInterval(function () {\n                    axios.get('/doing_api/',{\n                        params:{\n                            project_id: project_id\n                        }\n                    }).then(res=>{\n                        doing_api.innerText = res.data\n                    })\n                },500);\n\n                axios.get('/run/',{\n                    params:{\n                        project_id:this.project_id,\n                        // dck:this.dck.toString(),\n                    }\n                }).then(res=>{\n                    clearInterval(t);\n                    end_result.innerText = res.data;\n                    if(res.data == 'True'){\n                        end_result.style.color = 'green'\n                    }else{\n                        end_result.style.color = 'red'\n                    }\n                    doing_api.innerText = '全部执行完毕'\n                })\n\n            },\n            report(){\n\n            },\n            chose_configure_method(tab){\n                this.seting_configure.select = '';\n                this.seting_configure.value = '';\n                this.seting_configure.method = tab.label;\n            },\n            add_params(){\n                this.seting_api.params.push( {\"key\":\"\",\"value\":\"\"} )\n            },\n            del_params(index){\n                this.seting_api.params.splice(index,1)\n            },\n            add_headers(){\n                this.seting_api.headers.push({\"key\":\"\",\"value\":\"\"}  )\n            },\n            del_headers(index){\n                this.seting_api.headers.splice(index,1)\n            },\n            add_payload_fd(){\n                this.seting_api.payload_fd.push( {} )\n            },\n            del_payload_fd(index){\n                this.seting_api.payload_fd.splice(index,1)\n            },\n            add_payload_xwfu(){\n                this.seting_api.payload_xwfu.push( {} )\n            },\n            del_payload_xwfu(index){\n                this.seting_api.payload_xwfu.splice(index,1)\n            },\n        },\n        props:[\"project_id\",],\n        components:{\n            Report\n        }\n    }\n</script>\n\n<style scoped>\n    .el-table{\n        max-height:200px ;\n        overflow-y: scroll;\n    }\n    .smallfont{\n        font-size: xx-small;\n        color: gray;\n    }\n    p{\n        font-size: xx-small;\n        color: gray;\n    }\n</style>"]}]}