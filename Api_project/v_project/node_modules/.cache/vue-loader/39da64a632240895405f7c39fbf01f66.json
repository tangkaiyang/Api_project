{"remainingRequest":"/Users/wangzijia/Downloads/peixun_project/Api_project/v_project/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wangzijia/Downloads/peixun_project/Api_project/v_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangzijia/Downloads/peixun_project/Api_project/v_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangzijia/Downloads/peixun_project/Api_project/v_project/src/views/Monitor.vue?vue&type=template&id=27b451e0&scoped=true&","dependencies":[{"path":"/Users/wangzijia/Downloads/peixun_project/Api_project/v_project/src/views/Monitor.vue","mtime":1661597569717},{"path":"/Users/wangzijia/Downloads/peixun_project/Api_project/v_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangzijia/Downloads/peixun_project/Api_project/v_project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/wangzijia/Downloads/peixun_project/Api_project/v_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangzijia/Downloads/peixun_project/Api_project/v_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticStyle: { height: \"100%\" } },\n    [\n      _c(\n        \"el-container\",\n        { staticStyle: { height: \"100%\" } },\n        [\n          _c(\"el-aside\", { attrs: { width: \"200px\" } }, [_c(\"Menu\")], 1),\n          _c(\n            \"el-main\",\n            [\n              _c(\"h1\", [\n                _vm._v(\"线上监控模块 (监控或定时等方式执行具体项目大用例)\"),\n              ]),\n              _c(\n                \"el-table\",\n                {\n                  staticStyle: {\n                    \"min-height\": \"100%\",\n                    \"min-width\": \"100%\",\n                    \"overflow-y\": \"auto\",\n                  },\n                  attrs: { data: _vm.monitor_list, stripe: \"\", border: \"\" },\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"id\", label: \"ID\", width: \"100\" },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"label\", label: \"名称\", width: \"120\" },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"project_id\",\n                      label: \"项目id\",\n                      width: \"100\",\n                    },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"状态\", width: \"100\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\n                              \"span\",\n                              {\n                                style: {\n                                  color: _vm.getColor(scope.row.status),\n                                },\n                              },\n                              [_vm._v(_vm._s(scope.row.status))]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"next_date\",\n                      label: \"下次执行时间\",\n                      width: \"150\",\n                    },\n                  }),\n                  _c(\n                    \"el-table-column\",\n                    {\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"default\",\n                          fn: function (scope) {\n                            return [\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: { size: \"mini\", type: \"success\" },\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.change_monitor_status(\n                                        scope.row.id\n                                      )\n                                    },\n                                  },\n                                },\n                                [_vm._v(\"开关\")]\n                              ),\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: { size: \"mini\", type: \"default\" },\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.look_reports(\n                                        scope.row.project_id\n                                      )\n                                    },\n                                  },\n                                },\n                                [_vm._v(\"历史报告\")]\n                              ),\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: { size: \"mini\", type: \"default\" },\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.set_monitor(scope.$index)\n                                    },\n                                  },\n                                },\n                                [_vm._v(\"编辑\")]\n                              ),\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: { size: \"mini\", type: \"danger\" },\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.delete_monitor(scope.row.id)\n                                    },\n                                  },\n                                },\n                                [_vm._v(\"删除\")]\n                              ),\n                            ]\n                          },\n                        },\n                      ]),\n                    },\n                    [\n                      _c(\n                        \"template\",\n                        { slot: \"header\" },\n                        [\n                          _c(\"el-button\", { on: { click: _vm.add_monitor } }, [\n                            _vm._v(\"新增监控\"),\n                          ]),\n                        ],\n                        1\n                      ),\n                    ],\n                    2\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { visible: _vm.dialogFormVisible, width: \"90%\" },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogFormVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            { attrs: { model: _vm.form_data } },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"监控名称\", \"label-width\": \"120px\" } },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.form_data.label,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form_data, \"label\", $$v)\n                      },\n                      expression: \"form_data.label\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"关联项目id\", \"label-width\": \"120px\" } },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.form_data.project_id,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form_data, \"project_id\", $$v)\n                      },\n                      expression: \"form_data.project_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"监控方式\", \"label-width\": \"120px\" } },\n                [\n                  _c(\n                    \"el-radio-group\",\n                    {\n                      on: { change: _vm.chang_jkfs },\n                      model: {\n                        value: _vm.form_data.method,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.form_data, \"method\", $$v)\n                        },\n                        expression: \"form_data.method\",\n                      },\n                    },\n                    [\n                      _c(\"el-radio\", { attrs: { label: \"间隔时间\" } }, [\n                        _vm._v(\"间隔(分)\"),\n                      ]),\n                      _c(\"el-radio\", { attrs: { label: \"每日定时\" } }, [\n                        _vm._v(\"每日定时(24小时制如：17:22)\"),\n                      ]),\n                      _c(\"el-radio\", { attrs: { label: \"接口触发\" } }, [\n                        _vm._v(\"接口触发(不可修改)\"),\n                      ]),\n                      _c(\"el-radio\", { attrs: { label: \"jenkins语法\" } }, [\n                        _vm._v(\"jenkins语法\"),\n                      ]),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"设置值\", \"label-width\": \"120px\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入对应方式的值\" },\n                    model: {\n                      value: _vm.form_data.value,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form_data, \"value\", $$v)\n                      },\n                      expression: \"form_data.value\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"邮件接收地址\", \"label-width\": \"120px\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"多个用英文逗号,隔开\" },\n                    model: {\n                      value: _vm.form_data.email,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form_data, \"email\", $$v)\n                      },\n                      expression: \"form_data.email\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"机器人\", \"label-width\": \"120px\" } },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.form_data.robot,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form_data, \"robot\", $$v)\n                      },\n                      expression: \"form_data.robot\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.dialogFormVisible = false\n                    },\n                  },\n                },\n                [_vm._v(\"取 消\")]\n              ),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.save_monitor } },\n                [_vm._v(\"保 存\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { visible: _vm.dialogFormVisible2, width: \"600px\" },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogFormVisible2 = $event\n            },\n          },\n        },\n        [\n          _vm.dialogFormVisible2\n            ? _c(\"Report\", {\n                attrs: { project_id: _vm.look_report_project_id },\n              })\n            : _vm._e(),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}